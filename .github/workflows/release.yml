name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: bilibili_live_tool
            asset_name: bilibili_live_tool-linux-x86_64
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            artifact_name: bilibili_live_tool.exe
            asset_name: bilibili_live_tool-windows-x86_64.exe
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            artifact_name: bilibili_live_tool
            asset_name: bilibili_live_tool-macos-aarch64
            target: aarch64-apple-darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip debug symbols (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  create-release:
    name: Create Release
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          echo "changelog=Initial release ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
        else
          CHANGELOG=$(git log --pretty=format:"- %s" ${PREVIOUS_TAG}..HEAD)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Changes in ${{ steps.get_version.outputs.VERSION }}
          ${{ steps.changelog.outputs.changelog }}
          
          ## Downloads
          - **Linux**: `bilibili_live_tool-linux-amd64`
          - **Windows**: `bilibili_live_tool-windows-amd64.exe`
          - **macOS**: `bilibili_live_tool-macos-amd64`
          
          ## Installation
          
          ### Linux/macOS
          ```bash
          chmod +x bilibili_live_tool-*
          ./bilibili_live_tool-*
          ```
          
          ### Windows
          ```powershell
          bilibili_live_tool-windows-amd64.exe
          ```
        files: |
          artifacts/bilibili_live_tool-linux-x86_64/bilibili_live_tool
          artifacts/bilibili_live_tool-windows-x86_64.exe/bilibili_live_tool.exe
          artifacts/bilibili_live_tool-macos-aarch64/bilibili_live_tool
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}